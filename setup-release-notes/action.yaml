# Copyright 2023 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: setup-release-notes
author: puerco
description: 'Installs the kubernetes release-notes utility and includes it in your path'
branding:
  icon: 'package'
  color: 'blue'
# This is pinned to the last major release, we have to bump it for each action version.
inputs:
  release-notes-release:
    description: 'kubernetes/release version to be installed'
    required: false
    default: '0.18.0'
  install-dir:
    description: 'Where to install the release-notes binary'
    required: false
    default: '$HOME/.release-notes'
  use-sudo:
    description: 'set to true if install-dir location requires sudo privs'
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad # v4.0.0
      with:
        install-dir: ${{ inputs.install-dir }}
        use-sudo: ${{ inputs.use-sudo }}
    - shell: bash
      run: |
        #!/usr/bin/env bash
        # release notes install script
        shopt -s expand_aliases
        if [ -z "$NO_COLOR" ]; then
          alias log_info="echo -e \"\033[1;32mINFO\033[0m:\""
          alias log_error="echo -e \"\033[1;31mERROR\033[0m:\""
        else
          alias log_info="echo \"INFO:\""
          alias log_error="echo \"ERROR:\""
        fi
        set -e

        mkdir -p ${{ inputs.install-dir }}

        trap "popd >/dev/null" EXIT

        pushd ${{ inputs.install-dir }} > /dev/null
        rn_executable_name='release-notes'
        case ${{ runner.os }} in
          Linux)
            case ${{ runner.arch }} in
              X64)
                desired_rn_filename='release-notes-amd64-linux'
                ;;

              ARM64)
                desired_rn_filename='release-notes-arm64-linux'
                ;;

              *)
                log_error "unsupported architecture $arch"
                exit 1
                ;;
            esac
            ;;

          macOS)
            case ${{ runner.arch }} in
              X64)
                desired_rn_filename='release-notes-amd64-darwin'
                ;;

              ARM64)
                desired_rn_filename='release-notes-arm64-darwin'
                ;;

              *)
                log_error "unsupported architecture $arch"
                exit 1
                ;;
            esac
            ;;

          *)
            log_error "unsupported architecture $arch"
            exit 1
            ;;
        esac

        SUDO=
        if "${{ inputs.use-sudo }}" == "true" && command -v sudo >/dev/null; then
          SUDO=sudo
        fi

        semver='^([0-9]+\.){0,2}(\*|[0-9]+)$'
        if [[ ${{ inputs.release-notes-release }} =~ $semver ]]; then
          log_info "Custom release-notes version '${{ inputs.release-notes-release }}' requested"
        else
          log_error "Unable to validate requested release-notes version: '${{ inputs.release-notes-release }}'"
          exit 1
        fi

        # Download custom release-notes
        log_info "Downloading platform-specific version '${{ inputs.release-notes-release }}' of release-notes...\n      https://github.com/kubernetes/release/releases/download/v${{ inputs.release-notes-release }}/${desired_rn_filename}"
        $SUDO curl -sL https://github.com/kubernetes/release/releases/download/v${{ inputs.release-notes-release }}/${desired_rn_filename} -o ${rn_executable_name}

        RN_CERT=https://github.com/kubernetes/release/releases/download/v${{ inputs.release-notes-release }}/${desired_rn_filename}.pem
        RN_SIG=https://github.com/kubernetes/release/releases/download/v${{ inputs.release-notes-release }}/${desired_rn_filename}.sig

        log_info "Using cosign to verify signature of desired release-notes version"
        cosign verify-blob --certificate $RN_CERT --signature $RN_SIG \
          --certificate-identity "https://github.com/kubernetes/release/.github/workflows/release.yml@refs/tags/v${{ inputs.release-notes-release }}" \
          --certificate-oidc-issuer "https://token.actions.githubusercontent.com" ${rn_executable_name}
        retVal=$?
        if [[ $retVal -eq 0 ]]; then
          $SUDO chmod +x ${rn_executable_name}
          log_info "Installation complete!"
        else
          log_error "Unable to validate the release-notes binary: '${{ inputs.release-notes-release }}'"
          exit 1
        fi

    - run: echo "${{ inputs.install-dir }}" >> $GITHUB_PATH
      shell: bash
